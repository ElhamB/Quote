{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-udemi-project\\\\ract router\\\\src\\\\Pages\\\\AllQuote.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllQuote = () => {\n  _s();\n  const {\n    sendRequest,\n    error,\n    status,\n    data: loadedQuotes\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n  if (status === 'pending') {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, this);\n  }\n  //set true that controls that we start in loading state and that therefore a state is pending\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: Dummy_quotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n_s(AllQuote, \"K0PeTgRIQSUIoeBEbAnEiLQKfzo=\", false, function () {\n  return [useHttp];\n});\n_c = AllQuote;\nexport default AllQuote;\nvar _c;\n$RefreshReg$(_c, \"AllQuote\");","map":{"version":3,"names":["React","useEffect","QuoteList","useHttp","getAllQuotes","AllQuote","sendRequest","error","status","data","loadedQuotes","Dummy_quotes"],"sources":["D:/react-udemi-project/ract router/src/Pages/AllQuote.js"],"sourcesContent":["import React ,{useEffect}from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuote = () => {\r\n const {sendRequest,error,status,data:loadedQuotes} =useHttp(getAllQuotes,true);\r\n useEffect(()=>{\r\nsendRequest();\r\n },[sendRequest])\r\n if (status === 'pending'){\r\n  <div className=''>\r\n\r\n  </div>\r\n }\r\n  //set true that controls that we start in loading state and that therefore a state is pending\r\n  return <QuoteList quotes={Dummy_quotes}/>\r\n}\r\n\r\nexport default AllQuote\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAM,OAAO;AACrC,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,YAAY,QAAQ,YAAY;AAAC;AAE1C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACtB,MAAM;IAACC,WAAW;IAACC,KAAK;IAACC,MAAM;IAACC,IAAI,EAACC;EAAY,CAAC,GAAEP,OAAO,CAACC,YAAY,EAAC,IAAI,CAAC;EAC9EH,SAAS,CAAC,MAAI;IACfK,WAAW,EAAE;EACZ,CAAC,EAAC,CAACA,WAAW,CAAC,CAAC;EAChB,IAAIE,MAAM,KAAK,SAAS,EAAC;IACxB;MAAK,SAAS,EAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAEX;EACP;EACC;EACA,oBAAO,QAAC,SAAS;IAAC,MAAM,EAAEG;EAAa;IAAA;IAAA;IAAA;EAAA,QAAE;AAC3C,CAAC;AAAA,GAZKN,QAAQ;EAAA,QACuCF,OAAO;AAAA;AAAA,KADtDE,QAAQ;AAcd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}