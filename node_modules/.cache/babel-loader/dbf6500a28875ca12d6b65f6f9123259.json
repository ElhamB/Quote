{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-udemi-project\\\\ract router\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCommentForm = props => {\n  _s();\n  const commentTextRef = useRef();\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addComment);\n  const {\n    onAddComment\n  } = props;\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddComment();\n    }\n  }, [onAddComment, sts]);\n  const submitFormHandler = event => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    const enteredText = commentTextRef.current.value;\n    sendRequest({\n      text: enteredText\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [status === \"pending\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCommentForm, \"Q6zQb+ZurZDg8HCU2ZJYb+PH5z8=\", false, function () {\n  return [useHttp];\n});\n_c = NewCommentForm;\nexport default NewCommentForm;\nvar _c;\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"names":["useRef","useEffect","useHttp","addComment","LoadingSpinner","classes","NewCommentForm","props","commentTextRef","sendRequest","status","error","onAddComment","sts","submitFormHandler","event","preventDefault","enteredText","current","value","text","form","control","actions"],"sources":["D:/react-udemi-project/ract router/src/components/comments/NewCommentForm.js"],"sourcesContent":["import { useRef ,useEffect} from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status ,error} = useHttp(addComment);\n  const{onAddComment}=props;\nuseEffect(()=>{\nif(status ===\"completed\" && !error){\n  onAddComment();\n}\n},[onAddComment,sts])\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ text: enteredText });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAO,OAAO;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,cAAc,MAAM,sBAAsB;AAEjD,OAAOC,OAAO,MAAM,6BAA6B;AAAC;AAClD,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAA;EAChC,MAAMC,cAAc,GAAGR,MAAM,EAAE;EAC/B,MAAM;IAAES,WAAW;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGT,OAAO,CAACC,UAAU,CAAC;EACzD,MAAK;IAACS;EAAY,CAAC,GAACL,KAAK;EAC3BN,SAAS,CAAC,MAAI;IACd,IAAGS,MAAM,KAAI,WAAW,IAAI,CAACC,KAAK,EAAC;MACjCC,YAAY,EAAE;IAChB;EACA,CAAC,EAAC,CAACA,YAAY,EAACC,GAAG,CAAC,CAAC;EACnB,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,EAAE;;IAEtB;;IAEA;IACA,MAAMC,WAAW,GAAGT,cAAc,CAACU,OAAO,CAACC,KAAK;IAChDV,WAAW,CAAC;MAAEW,IAAI,EAAEH;IAAY,CAAC,CAAC;EACpC,CAAC;EAED,oBACE;IAAM,SAAS,EAAEZ,OAAO,CAACgB,IAAK;IAAC,QAAQ,EAAEP,iBAAkB;IAAA,WACxDJ,MAAM,KAAK,SAAS,iBACnB;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAErB,eACD;MAAK,SAAS,EAAEL,OAAO,CAACiB,OAAQ;MAAC,QAAQ,EAAER,iBAAkB;MAAA,wBAC3D;QAAO,OAAO,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eAC7C;QAAU,EAAE,EAAC,SAAS;QAAC,IAAI,EAAC,GAAG;QAAC,GAAG,EAAEN;MAAe;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5D,eACN;MAAK,SAAS,EAAEH,OAAO,CAACkB,OAAQ;MAAA,uBAC9B;QAAQ,SAAS,EAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAqB;MAAA;MAAA;MAAA;IAAA,QACxC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAnCIjB,cAAc;EAAA,QAEoBJ,OAAO;AAAA;AAAA,KAFzCI,cAAc;AAqCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}